{"version":3,"sources":["views/Login.tsx"],"names":["GoogleLoginConfig","loginUtils","FacebookLogin","useStyles","makeStyles","servicesLoginContainer","justifyContent","marginTop","flexDirection","googleBtn","height","color","backgroundColor","marginLeft","border","borderRadius","maxHeight","padding","paddingTop","paddingBottom","textTransform","fontWeight","flex","fbBtn","marginRight","btnLabel","display","alignItems","btnIcon","width","btnText","lineHeight","fontSize","eyeIcon","footerContainer","position","bottom","left","marginBottom","cardContainer","footerText","boxSizing","maxWidth","LoginSchema","Yup","shape","email","required","password","withRouter","props","classes","appStyles","useAppStyles","useLoader","startLoading","stopLoading","React","useState","socialServiceError","setSocialServiceError","dispatch","useContext","AuthContext","handleLogin","service","accessToken","a","console","log","type","useEffect","analyticsUtils","EVENT","category","action","onGoogleSuccess","googleUser","authResponse","getAuthResponse","gatoAPI","googleLogin","token","id_token","data","error","document","getElementById","onSubmit","setFieldError","CLICK_SERVICE","api","login","status","ERROR_SERVICE","rerequest","setRerequest","facebookCallback","response","fbLogin","showPassword","setShowPassword","showPorque","setShowPorque","sentAnalytics","setSentAnalytics","className","hola","style","authCardContainer","container","variant","titleDisplay","link","onClick","b","text","transition","overflow","condition","message","label","id","margin","justify","textAlign","fontFamily","initialValues","validationSchema","values","handleChange","handleBlur","handleSubmit","errors","rest","submitCount","value","onChange","onBlur","inputProps","inputMode","autoComplete","undefined","touched","errorMessage","handleError","InputProps","endAdornment","x","to","p","target","href","rel","textDecoration"],"mappings":"kTAiCQA,EAAqCC,IAArCD,kBAAmBE,EAAkBD,IAAlBC,cAIrBC,EAAYC,YAAW,CAC3BC,uBAAwB,CACtBC,eAAgB,gBAChBC,UAAW,OACX,6CAA8C,CAC5CC,cAAe,WAGnBC,UAAW,CACTC,OAAQ,OACRC,MAAO,UACPC,gBAAiB,QACjBC,WAAY,OACZC,OAAQ,oBACRC,aAAc,MACdC,UAAW,OACXC,QAAS,OACTC,WAAY,OACZC,cAAe,OACfC,cAAe,OACfC,WAAY,IACZC,KAAM,EACN,6CAA8C,CAC5CT,WAAY,MACZN,UAAW,OACXe,KAAM,YAGVC,MAAO,CACLb,OAAQ,OACRC,MAAO,QACPC,gBAAiB,UACjBY,YAAa,OACbT,aAAc,MACdC,UAAW,OACXC,QAAS,OACTC,WAAY,OACZC,cAAe,OACfC,cAAe,OACfC,WAAY,IACZC,KAAM,EACN,6CAA8C,CAC5CE,YAAa,MACbF,KAAM,YAGVG,SAAU,CACRC,QAAS,OACTC,WAAY,SACZrB,eAAgB,cAElBsB,QAAS,CACPC,MAAO,OACPH,QAAS,OACTpB,eAAgB,aAChBqB,WAAY,SACZH,YAAa,QAEfM,QAAS,CACPC,WAAY,OACZC,SAAU,OACV,6CAA8C,CAC5CH,MAAO,SAGXI,QAAS,CACPhB,QAAS,OAEXiB,gBAAiB,CACftB,gBAAiB,oBACjBF,OAAQ,OACRmB,MAAO,QACPM,SAAU,WACVC,OAAQ,IACR,4CAA6C,CAC3CC,KAAM,gCAER,4CAA6C,CAC3CF,SAAU,WACVtB,WAAY,QACZyB,aAAc,QACd/B,UAAW,OACXG,OAAQ,eAEVgB,QAAS,OACTpB,eAAgB,SAChBqB,WAAY,UAEdY,cAAe,CACb,4CAA6C,CAC3CD,aAAc,wCAGlBE,WAAY,CACVR,SAAU,kBACVD,WAAY,kBACZd,QAAS,SACTwB,UAAW,aACXC,SAAU,QACV,4CAA6C,CAC3CzB,QAAS,0BAUT0B,EAAcC,MAAaC,MAAM,CACrCC,MAAOF,MACJE,MAAM,4BACNC,SAAS,2BACZC,SAAUJ,MAAaG,SAAS,6BA0ZnBE,uBAvZD,SAACC,GACb,IAAMC,EAAUhD,IACViD,EAAYC,cAF0B,EAGNC,cAA9BC,EAHoC,EAGpCA,aAAcC,EAHsB,EAGtBA,YAHsB,EAKQC,IAAMC,SAAS,IALvB,mBAKrCC,EALqC,KAKjBC,EALiB,KAOpCC,EAAaJ,IAAMK,WAAWC,KAA9BF,SAEFG,EAAW,uCAAG,WAAOC,EAAwBC,GAA/B,SAAAC,EAAA,sDAClBC,QAAQC,IAAR,0BAA+BJ,EAA/B,oBAAkDC,IAClDL,EAAS,CAAES,KAAM,QAASJ,gBAC1BV,IAHkB,2CAAH,wDAMjBC,IAAMc,WAAU,WACdC,IAAeC,MAAM,CACnBC,SAAU,QACVC,OAAO,kBAER,IAEHlB,IAAMc,WAAU,WACd,IAMMK,EAAe,uCAAG,WAAOC,GAAP,mBAAAV,EAAA,6DAChBW,EAAeD,EAAWE,kBADV,kBAKVC,IAAQC,YAAY,CAC5BC,MAAOJ,EAAaK,WANF,gBAIVjB,EAJU,EAIlBkB,KAAQlB,YAIVF,EAAY,SAAUE,GARF,gDAUpBV,IACAY,QAAQiB,MAAR,MACAzB,EAAsB,wCAZF,yDAAH,sDAgBrB5D,EACEsF,SAASC,eAAe,sBACxBX,GAxBsB,SAACS,GACvBjB,QAAQiB,MAAMA,GACd7B,IACAI,EAAsB,6CAyBvB,IAEH,IAKM4B,EAAQ,uCAAG,yCAAArB,EAAA,6DACbrB,EADa,EACbA,MAAOE,EADM,EACNA,SACPyC,EAFa,EAEbA,cAEFjB,IAAekB,cAAc,SAC7BnC,IALe,kBAeHoC,IAAIC,MAAM,CAClB9C,QACAE,aAjBW,gBAcXkB,EAdW,EAcXA,YAKFF,EAAY,QAASE,GAnBR,kDAoBJ2B,EApBI,KAoBJA,OApBI,KAoBIR,MACjB7B,IACAI,EAAsB,IACP,MAAXiC,GACFrB,IAAesB,cAAc,QAAS,cACtCL,EAAc,WAAY,6BACN,MAAXI,IACTrB,IAAesB,cAAc,QAAS,eACtCL,EAAc,QAAS,uCA5BZ,0DAAH,wDA1D8B,EA2FVhC,IAAMC,UAAS,GA3FL,mBA2FrCqC,EA3FqC,KA2F1BC,EA3F0B,KA6FtCC,EAAgB,uCAAG,WAAOC,GAAP,iBAAA/B,EAAA,0DACnB+B,EAASpB,aADU,0CAKTE,IAAQmB,QAAQ,CACxBjB,MAAOgB,EAASpB,aAAaZ,cANZ,gBAITA,EAJS,EAIjBkB,KAAQlB,YAIVF,EAAY,WAAYE,GARL,gDAUnBE,QAAQiB,MAAR,MACA7B,IACAI,EACE,wFAEFoC,GAAa,GAfM,gCAkBrB5B,QAAQiB,MAAM,oDACd7B,IACAI,EACE,wFAEFoC,GAAa,GAvBQ,yDAAH,sDA7FsB,EAoIJvC,IAAMC,UAAS,GApIX,mBAoIrC0C,EApIqC,KAoIvBC,EApIuB,OAsIR5C,IAAMC,UAAS,GAtIP,mBAsIrC4C,EAtIqC,KAsIzBC,EAtIyB,OAuIF9C,IAAMC,UAAS,GAvIb,mBAuIrC8C,EAvIqC,KAuItBC,EAvIsB,KAyI5C,OACE,oCACE,yBAAKC,UAAWtD,EAAUuD,KAAMC,MAAO,IACrC,4CAEF,yBACEF,UAAWtD,EAAUyD,kBAAoB,IAAM1D,EAAQZ,eAEvD,kBAAC,IAAD,CAAMuE,WAAS,EAACF,MAAO,CAAErG,UAAW,GAAIC,cAAe,WACrD,kBAAC,IAAD,CAAYuG,QAAQ,KAAKL,UAAWtD,EAAU4D,cAA9C,oCAGA,kBAAC,IAAD,CACED,QAAQ,QACRL,UAAWtD,EAAU6D,KACrBC,QAAS,WACPX,GAAc,SAAAY,GAAC,OAAKA,KACfX,IACHhC,IAAeC,MAAM,CACnBC,SAAU,kBACVC,OAAO,4BAET8B,GAAiB,KAGrBG,MAAO,CACLlF,QAAS,OACTC,WAAY,WAfhB,8CAkBqC,IACnC,0BACEiF,MAAO,CACL/F,WAAY,MACZa,QAAS,OACTpB,eAAgB,SAChBqB,WAAY,WAGb2E,EACC,kBAAC,IAAD,CAAe3F,MAAM,mBAErB,kBAAC,IAAD,CAAiBA,MAAM,qBAI7B,kBAAC,IAAD,CACEoG,QAAQ,QACRL,UAAWtD,EAAUgE,KACrBR,MAAO,CACLS,WAAYf,EACR,2BACA,4BACJgB,SAAU,SACVtG,UAAWsF,EAAa,SAAW,MACnChE,aAAc,SATlB,0UAoBF,kBAAC,IAAD,CAAMsE,MAAO,CAAErG,UAAW,KACxB,kBAAC,IAAD,CACEgH,UAAkC,KAAvB5D,EACX6D,QAAS7D,IAEX,kBAAC,IAAD,CAAMmD,WAAS,EAACJ,UAAWvD,EAAQ9C,wBACjC,kBAAC,IAAD,CACE6G,QA1FW,WACrB1C,IAAekB,cAAc,YAC7BnC,IACA,IACErD,EAAc+F,EAAkBF,GAChC,MAAOV,GACP7B,IACAY,QAAQC,IAAIgB,KAoFJqB,UAAWvD,EAAQ5B,MACnBZ,MAAM,WACN8G,MACE,yBAAKf,UAAWvD,EAAQ1B,UACtB,yBAAKiF,UAAWvD,EAAQvB,SACtB,kBAAC,IAAD,CAAcgF,MAAO,CAAE/E,MAAO,QAAUlB,MAAM,WAEhD,0BAAM+F,UAAWvD,EAAQrB,SAAzB,gBACe,2CAKrB,kBAAC,IAAD,CACEoF,QAAS,WACP1C,IAAekB,cAAc,UAC7BnC,KAEFmD,UAAWvD,EAAQ1C,UACnBE,MAAM,SACN+G,GAAG,qBACHD,MACE,yBAAKf,UAAWvD,EAAQ1B,UACtB,yBAAKiF,UAAWvD,EAAQvB,SACtB,kBAAC,IAAD,CAAYgF,MAAO,CAAE/E,MAAO,WAE9B,0BAAM6E,UAAWvD,EAAQrB,SAAzB,gBACe,0CAOvB,kBAAC,IAAD,CACE8E,MAAO,CAAEe,OAAQ,iBACjBC,QAAQ,SACRjG,WAAW,SACXmF,WAAS,GAET,kBAAC,IAAD,CACEF,MAAO,CACL/E,MAAO,MACPnB,OAAQ,MACRE,gBAAiB,cACjBc,QAAS,iBAGb,kBAAC,IAAD,CACEkF,MAAO,CACL/E,MAAO,MACP8F,OAAQ,IACRE,UAAW,SACXC,WAAY,SACZ9F,SAAU,OACVD,WAAY,OACZpB,MAAO,mBACPU,WAAY,MAThB,KAcA,kBAAC,IAAD,CACEuF,MAAO,CACL/E,MAAO,MACPnB,OAAQ,MACRE,gBAAiB,cACjBc,QAAS,kBAKf,kBAAC,IAAD,CACEqG,cAvOwB,CAChCjF,MAAO,GACPE,SAAU,IAsOFwC,SAAUA,EACVwC,iBAAkBrF,IAEjB,gBACCsF,EADD,EACCA,OACAC,EAFD,EAECA,aACAC,EAHD,EAGCA,WACAC,EAJD,EAICA,aACAC,EALD,EAKCA,OAEGC,GAPJ,EAMCC,YAND,oGASC,0BAAM/C,SAAU4C,GACd,kBAAC,IAAD,CACEI,MAAOP,EAAOnF,MACd2F,SAAUP,EACVQ,OAAQP,EACRV,MAAM,QACNnD,KAAK,QACLqE,WAAY,CACVC,UAAW,SAEbC,aAAa,QACbnB,GAAG,QACHrC,WAAwByD,IAAjBT,EAAOvF,OAAuBwF,EAAKS,QAAQjG,MAClDkG,aAAcX,EAAOvF,MACrBmG,aAAW,IAEb,kBAAC,IAAD,CACET,MAAOP,EAAOjF,SACdyF,SAAUP,EACVQ,OAAQP,EACRV,MAAM,gBACNnD,KAAM8B,EAAe,OAAS,WAC9BsB,GAAG,WACHmB,aAAa,mBACbK,WAAY,CACVC,aACE,kBAAC,IAAD,CACEjC,QAAS,kBAAMb,GAAgB,SAAA+C,GAAC,OAAKA,MACrC1C,UAAWvD,EAAQlB,SAElBmE,EACC,kBAAC,IAAD,CAAczF,MAAM,qBAEpB,kBAAC,IAAD,CAASA,MAAM,uBAKvB0E,WAA2ByD,IAApBT,EAAOrF,UAA0BsF,EAAKS,QAAQ/F,SACrDgG,aAAcX,EAAOrF,SACrBiG,aAAW,IAEb,yBAAKrC,MAAO,CAAE/E,MAAO,OAAQgG,UAAW,UACtC,kBAAC,IAAD,CACElH,MAAM,mBACN0I,GAAG,SACHzC,MAAO,CAAE5E,SAAU,SAHrB,+BAQF,kBAAC,IAAD,CACE4E,MAAO,CACLrG,UAAW,QAEbmH,GAAG,eACH/G,MAAM,UACN8G,MAAM,WACNnD,KAAK,WAEP,kBAAC,IAAD,CACEoC,UAAWtD,EAAUkG,EACrB1C,MAAO,CACL5E,SAAU,OACV6F,UAAW,SACXvF,aAAc,SALlB,qCAQ4B,IAC1B,kBAAC,IAAD,CAAM3B,MAAM,iBAAiB0I,GAAG,WAAhC,uBASZ,yBAAK3C,UAAWvD,EAAQjB,iBACtB,kBAAC,IAAD,CAAYwE,UAAWtD,EAAUgE,KAAO,IAAMjE,EAAQX,YAAtD,wGAGE,uBACE+G,OAAO,SACPC,KAAK,oCACLC,IAAI,sBACJ7C,MAAO,CACLjG,MAAO,iBACP+I,eAAgB,SANpB,qCAUK,IAbP,kBAckB,IAChB,uBACEF,KAAK,gCACL5C,MAAO,CACLjG,MAAO,iBACP+I,eAAgB,SAJpB,0BAQK,IAvBP","file":"static/js/Login.c63dcbb6.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Divider,\n  IconButton,\n  makeStyles,\n  Grid,\n  Typography,\n} from '@material-ui/core'\n\nimport { withRouter, RouteComponentProps } from 'react-router'\n\nimport {\n  Button,\n  TextField,\n  Link,\n  ErrorMessageB,\n  useAppStyles,\n  EyeIcon,\n  EyeSlashIcon,\n  FacebookIcon,\n  GoogleIcon,\n  ChevronIconUp,\n  ChevronIconDown,\n} from '@elgatoylacaja/components'\n\nimport { FormikHelpers, Formik } from 'formik'\nimport { useLoader } from '@elgatoylacaja/hooks'\n\nimport * as Yup from 'yup'\n\nimport { analyticsUtils, loginUtils, gatoAPI } from '@elgatoylacaja/utils'\nimport { AuthContext } from '../contexts/AuthContext'\nimport api from '../api'\nconst { GoogleLoginConfig, FacebookLogin } = loginUtils\n\nexport type LoginServices = 'email' | 'facebook' | 'google'\n\nconst useStyles = makeStyles({\n  servicesLoginContainer: {\n    justifyContent: 'space-between',\n    marginTop: '10px',\n    '@media only screen and (max-width : 600px)': {\n      flexDirection: 'column',\n    },\n  },\n  googleBtn: {\n    height: '60px',\n    color: '#979797',\n    backgroundColor: 'white',\n    marginLeft: '16px',\n    border: '1px solid #979797',\n    borderRadius: '3px',\n    maxHeight: '60px',\n    padding: '20px',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    textTransform: 'none',\n    fontWeight: 400,\n    flex: 1,\n    '@media only screen and (max-width : 600px)': {\n      marginLeft: '0px',\n      marginTop: '10px',\n      flex: 'initial',\n    },\n  },\n  fbBtn: {\n    height: '60px',\n    color: 'white',\n    backgroundColor: '#4267B2',\n    marginRight: '16px',\n    borderRadius: '3px',\n    maxHeight: '60px',\n    padding: '20px',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    textTransform: 'none',\n    fontWeight: 400,\n    flex: 1,\n    '@media only screen and (max-width : 600px)': {\n      marginRight: '0px',\n      flex: 'initial',\n    },\n  },\n  btnLabel: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  btnIcon: {\n    width: '25px',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginRight: '15px',\n  },\n  btnText: {\n    lineHeight: '24px',\n    fontSize: '18px',\n    '@media only screen and (max-width : 600px)': {\n      width: '100%',\n    },\n  },\n  eyeIcon: {\n    padding: '5px',\n  },\n  footerContainer: {\n    backgroundColor: 'var(--gray-light)',\n    height: '96px',\n    width: '100vw',\n    position: 'absolute',\n    bottom: '0',\n    '@media only screen and (min-width: 800px)': {\n      left: 'calc((100vw - 800px) / (-2))',\n    },\n    '@media only screen and (max-width: 800px)': {\n      position: 'relative',\n      marginLeft: '-24px',\n      marginBottom: '-24px',\n      marginTop: 'auto',\n      height: 'fit-content',\n    },\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cardContainer: {\n    '@media only screen and (min-width: 800px)': {\n      marginBottom: 'calc(96px - 24px + 37px) !important',\n    },\n  },\n  footerText: {\n    fontSize: '14px !important',\n    lineHeight: '24px !important',\n    padding: '0 24px',\n    boxSizing: 'border-box',\n    maxWidth: '800px',\n    '@media only screen and (max-width: 800px)': {\n      padding: '24px 24px 20px 24px',\n    },\n  },\n})\n\ninterface FormValues {\n  email: string\n  password: string\n}\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('No es un email válido')\n    .required('Este campo es requerido'),\n  password: Yup.string().required('Este campo es requerido'),\n})\n\nconst Login = (props: RouteComponentProps) => {\n  const classes = useStyles()\n  const appStyles = useAppStyles()\n  const { startLoading, stopLoading } = useLoader()\n\n  const [socialServiceError, setSocialServiceError] = React.useState('')\n\n  const { dispatch } = React.useContext(AuthContext)\n\n  const handleLogin = async (service: LoginServices, accessToken: string) => {\n    console.log(`Login correcto: ${service}, token: ${accessToken}`)\n    dispatch({ type: 'LOGIN', accessToken })\n    stopLoading()\n  }\n\n  React.useEffect(() => {\n    analyticsUtils.EVENT({\n      category: 'Login',\n      action: `Visit Login`,\n    })\n  }, [])\n\n  React.useEffect(() => {\n    const onGoogleFailure = (error: any) => {\n      console.error(error)\n      stopLoading()\n      setSocialServiceError('Hubo un error al ingresar con google')\n    }\n\n    const onGoogleSuccess = async (googleUser: gapi.auth2.GoogleUser) => {\n      const authResponse = googleUser.getAuthResponse()\n      try {\n        const {\n          data: { accessToken },\n        } = await gatoAPI.googleLogin({\n          token: authResponse.id_token,\n        })\n        handleLogin('google', accessToken)\n      } catch (error) {\n        stopLoading()\n        console.error(error)\n        setSocialServiceError('Hubo un error al ingresar con google')\n      }\n    }\n\n    GoogleLoginConfig(\n      document.getElementById('googleSignInButton'),\n      onGoogleSuccess,\n      onGoogleFailure\n    )\n    // eslint-disable-next-line\n  }, [])\n\n  const initialValues: FormValues = {\n    email: '',\n    password: '',\n  }\n\n  const onSubmit = async (\n    { email, password }: FormValues,\n    { setFieldError }: FormikHelpers<FormValues>\n  ) => {\n    analyticsUtils.CLICK_SERVICE('email')\n    startLoading()\n    try {\n      // const {\n      //   data: { accessToken },\n      // } = await gatoAPI.emailLogin({\n      //   email,\n      //   password,\n      // })\n      const {\n        accessToken,\n      } = await api.login({\n        email,\n        password,\n      })\n      handleLogin('email', accessToken)\n    } catch ({ status, error }) {\n      stopLoading()\n      setSocialServiceError('')\n      if (status === 403) {\n        analyticsUtils.ERROR_SERVICE('email', '(password)')\n        setFieldError('password', 'Contraseña incorrecta')\n      } else if (status === 404) {\n        analyticsUtils.ERROR_SERVICE('email', '(no existe)')\n        setFieldError('email', 'No existe un usuario con ese email')\n      }\n    }\n  }\n\n  const [rerequest, setRerequest] = React.useState(false)\n\n  const facebookCallback = async (response: fb.StatusResponse) => {\n    if (response.authResponse) {\n      try {\n        const {\n          data: { accessToken },\n        } = await gatoAPI.fbLogin({\n          token: response.authResponse.accessToken,\n        })\n        handleLogin('facebook', accessToken)\n      } catch (error) {\n        console.error(error)\n        stopLoading()\n        setSocialServiceError(\n          'Hubo un error al ingresar con facebook, al reintentar revisa los permisos necesarios'\n        )\n        setRerequest(true)\n      }\n    } else {\n      console.error('User cancelled login or did not fully authorize.')\n      stopLoading()\n      setSocialServiceError(\n        'Hubo un error al ingresar con facebook, al reintentar revisa los permisos necesarios'\n      )\n      setRerequest(true)\n    }\n  }\n\n  const handleFacebook = () => {\n    analyticsUtils.CLICK_SERVICE('facebook')\n    startLoading()\n    try {\n      FacebookLogin(facebookCallback, rerequest)\n    } catch (error) {\n      stopLoading()\n      console.log(error)\n      // setSocialServiceError('Hubo un error al ingresar con facebook')\n    }\n  }\n\n  const [showPassword, setShowPassword] = React.useState(false)\n\n  const [showPorque, setShowPorque] = React.useState(false)\n  const [sentAnalytics, setSentAnalytics] = React.useState(false)\n\n  return (\n    <>\n      <div className={appStyles.hola} style={{}}>\n        <span>¡Hola!</span>\n      </div>\n      <div\n        className={appStyles.authCardContainer + ' ' + classes.cardContainer}\n      >\n        <Grid container style={{ marginTop: 10, flexDirection: 'column' }}>\n          <Typography variant=\"h1\" className={appStyles.titleDisplay}>\n            Sumate a hacer ciencia colectiva\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className={appStyles.link}\n            onClick={() => {\n              setShowPorque(b => !b)\n              if (!sentAnalytics) {\n                analyticsUtils.EVENT({\n                  category: 'Auth Disclaimer',\n                  action: `Click expand disclaimer`,\n                })\n                setSentAnalytics(true)\n              }\n            }}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            ¿Por qué tengo que iniciar sesión?{' '}\n            <span\n              style={{\n                marginLeft: '6px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              {showPorque ? (\n                <ChevronIconUp color=\"var(--primary)\" />\n              ) : (\n                <ChevronIconDown color=\"var(--primary)\" />\n              )}\n            </span>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className={appStyles.text}\n            style={{\n              transition: showPorque\n                ? 'max-height 0.25s ease-in'\n                : 'max-height 0.15s ease-out',\n              overflow: 'hidden',\n              maxHeight: showPorque ? '1000px' : '0px',\n              marginBottom: '40px',\n            }}\n          >\n            Es necesario iniciar sesión para evitar que repitas un experimento y\n            tomemos una muestra dos veces. Todos los datos están anonimizados,\n            son usados exclusivamente para investigación científica y son\n            publicados de manera abierta y puestos a disposición de la comunidad\n            científica conjuntamente con los papers.\n          </Typography>\n        </Grid>\n\n        <Grid style={{ marginTop: 10 }}>\n          <ErrorMessageB\n            condition={socialServiceError !== ''}\n            message={socialServiceError}\n          />\n          <Grid container className={classes.servicesLoginContainer}>\n            <Button\n              onClick={handleFacebook}\n              className={classes.fbBtn}\n              color=\"facebook\"\n              label={\n                <div className={classes.btnLabel}>\n                  <div className={classes.btnIcon}>\n                    <FacebookIcon style={{ width: '100%' }} color=\"white\" />\n                  </div>\n                  <span className={classes.btnText}>\n                    Ingresar con <b>Facebook</b>\n                  </span>\n                </div>\n              }\n            />\n            <Button\n              onClick={() => {\n                analyticsUtils.CLICK_SERVICE('google')\n                startLoading()\n              }}\n              className={classes.googleBtn}\n              color=\"google\"\n              id=\"googleSignInButton\"\n              label={\n                <div className={classes.btnLabel}>\n                  <div className={classes.btnIcon}>\n                    <GoogleIcon style={{ width: '100%' }} />\n                  </div>\n                  <span className={classes.btnText}>\n                    Ingresar con <b>Google</b>\n                  </span>\n                </div>\n              }\n            />\n          </Grid>\n\n          <Grid\n            style={{ margin: '40px 0 12px 0' }}\n            justify=\"center\"\n            alignItems=\"center\"\n            container\n          >\n            <Divider\n              style={{\n                width: '40%',\n                height: '2px',\n                backgroundColor: 'var(--gray)',\n                display: 'inline-flex',\n              }}\n            />\n            <Typography\n              style={{\n                width: '20%',\n                margin: '0',\n                textAlign: 'center',\n                fontFamily: 'Gotham',\n                fontSize: '18px',\n                lineHeight: '27px',\n                color: 'var(--gray-dark)',\n                fontWeight: 600,\n              }}\n            >\n              O\n            </Typography>\n            <Divider\n              style={{\n                width: '40%',\n                height: '2px',\n                backgroundColor: 'var(--gray)',\n                display: 'inline-flex',\n              }}\n            />\n          </Grid>\n\n          <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={LoginSchema}\n          >\n            {({\n              values,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              errors,\n              submitCount,\n              ...rest\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  label=\"Email\"\n                  type=\"email\"\n                  inputProps={{\n                    inputMode: 'email',\n                  }}\n                  autoComplete=\"email\"\n                  id=\"email\"\n                  error={errors.email !== undefined && rest.touched.email}\n                  errorMessage={errors.email}\n                  handleError\n                />\n                <TextField\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  label=\"Contraseña\"\n                  type={showPassword ? 'text' : 'password'}\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton\n                        onClick={() => setShowPassword(x => !x)}\n                        className={classes.eyeIcon}\n                      >\n                        {showPassword ? (\n                          <EyeSlashIcon color=\"var(--gray-dark)\" />\n                        ) : (\n                          <EyeIcon color=\"var(--gray-dark)\" />\n                        )}\n                      </IconButton>\n                    ),\n                  }}\n                  error={errors.password !== undefined && rest.touched.password}\n                  errorMessage={errors.password}\n                  handleError\n                />\n                <div style={{ width: '100%', textAlign: 'right' }}>\n                  <Link\n                    color=\"var(--secondary)\"\n                    to=\"/reset\"\n                    style={{ fontSize: '12px' }}\n                  >\n                    Olvidé mi contraseña\n                  </Link>\n                </div>\n                <Button\n                  style={{\n                    marginTop: '40px',\n                  }}\n                  id=\"button-login\"\n                  color=\"primary\"\n                  label=\"Ingresar\"\n                  type=\"submit\"\n                />\n                <Typography\n                  className={appStyles.p}\n                  style={{\n                    fontSize: '16px',\n                    textAlign: 'center',\n                    marginBottom: '45px',\n                  }}\n                >\n                  ¿Todavía no tenés cuenta?{' '}\n                  <Link color=\"var(--primary)\" to=\"/signup\">\n                    Crear cuenta\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Grid>\n      </div>\n      <div className={classes.footerContainer}>\n        <Typography className={appStyles.text + ' ' + classes.footerText}>\n          Podés ver todos los experimentos, diarios de investigación, papers\n          publicados y datasets en{` `}\n          <a\n            target=\"_blank\"\n            href=\"https://elgatoylacaja.com.ar/labs\"\n            rel=\"noopener noreferrer\"\n            style={{\n              color: 'var(--primary)',\n              textDecoration: 'none',\n            }}\n          >\n            https://elgatoylacaja.com.ar/labs\n          </a>{' '}\n          o escribirnos a{' '}\n          <a\n            href=\"mailto:labs@elgatoylacaja.com\"\n            style={{\n              color: 'var(--primary)',\n              textDecoration: 'none',\n            }}\n          >\n            labs@elgatoylacaja.com\n          </a>{' '}\n          por cualquier consulta.\n        </Typography>\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(Login)\n"],"sourceRoot":""}